# Enhanced Logging Configuration
# Copy this file to .env and configure as needed

# ============================================================================
# ENHANCED LOGGING
# ============================================================================

# Enable enhanced logging service with advanced debugging features
# Set to 'true' to enable, 'false' to use minimal structured logging
# Default: false
USE_ENHANCED_LOGGING=false

# Debug mode - enables verbose logging and data dumps
# Set to 'true' for detailed debugging output
# Default: false
DEBUG_MODE=false

# Log format: 'text' for human-readable or 'json' for machine-parseable
# JSON format is recommended for log aggregation tools
# Default: text
LOG_FORMAT=text

# Log level: DEBUG, INFO, WARNING, or ERROR
# Default: INFO
LOG_LEVEL=INFO

# Enable performance profiling - tracks operation timing and percentiles
# Set to 'true' to collect performance data
# Default: true (when enhanced logging is enabled)
ENABLE_PROFILING=true

# Enable memory tracking - tracks memory usage per operation
# Note: Memory tracking has a small performance overhead
# Default: false
TRACK_MEMORY=false

# ============================================================================
# ENHANCED LOGGING USAGE
# ============================================================================
#
# Basic setup:
#   USE_ENHANCED_LOGGING=true
#   LOG_FORMAT=text
#   LOG_LEVEL=INFO
#
# Development debugging:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=true
#   LOG_FORMAT=text
#   LOG_LEVEL=DEBUG
#   ENABLE_PROFILING=true
#
# Production with log aggregation:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=false
#   LOG_FORMAT=json
#   LOG_LEVEL=INFO
#   ENABLE_PROFILING=true
#   TRACK_MEMORY=false
#
# Performance analysis:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=false
#   LOG_FORMAT=json
#   LOG_LEVEL=INFO
#   ENABLE_PROFILING=true
#   TRACK_MEMORY=true
#
# ============================================================================
# VIEWING LOGS
# ============================================================================
#
# Text format:
#   tail -f app.log
#   grep "graphic_id=g1" app.log
#   python scripts/analyze_logs.py app.log --timing
#
# JSON format:
#   tail -f app.log | jq
#   python scripts/analyze_logs.py app.log --json --timing
#
# Performance summary API:
#   GET http://localhost:5001/api/performance-summary
#
# ============================================================================
# OTHER CONFIGURATION
# ============================================================================

# Add other environment variables below as needed
