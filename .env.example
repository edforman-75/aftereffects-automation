# Enhanced Logging Configuration
# Copy this file to .env and configure as needed

# ============================================================================
# ENHANCED LOGGING
# ============================================================================

# Enable enhanced logging service with advanced debugging features
# Set to 'true' to enable, 'false' to use minimal structured logging
# Default: false
USE_ENHANCED_LOGGING=false

# Debug mode - enables verbose logging and data dumps
# Set to 'true' for detailed debugging output
# Default: false
DEBUG_MODE=false

# Log format: 'text' for human-readable or 'json' for machine-parseable
# JSON format is recommended for log aggregation tools
# Default: text
LOG_FORMAT=text

# Log level: DEBUG, INFO, WARNING, or ERROR
# Default: INFO
LOG_LEVEL=INFO

# Enable performance profiling - tracks operation timing and percentiles
# Set to 'true' to collect performance data
# Default: true (when enhanced logging is enabled)
ENABLE_PROFILING=true

# Enable memory tracking - tracks memory usage per operation
# Note: Memory tracking has a small performance overhead
# Default: false
TRACK_MEMORY=false

# ============================================================================
# ENHANCED LOGGING USAGE
# ============================================================================
#
# Basic setup:
#   USE_ENHANCED_LOGGING=true
#   LOG_FORMAT=text
#   LOG_LEVEL=INFO
#
# Development debugging:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=true
#   LOG_FORMAT=text
#   LOG_LEVEL=DEBUG
#   ENABLE_PROFILING=true
#
# Production with log aggregation:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=false
#   LOG_FORMAT=json
#   LOG_LEVEL=INFO
#   ENABLE_PROFILING=true
#   TRACK_MEMORY=false
#
# Performance analysis:
#   USE_ENHANCED_LOGGING=true
#   DEBUG_MODE=false
#   LOG_FORMAT=json
#   LOG_LEVEL=INFO
#   ENABLE_PROFILING=true
#   TRACK_MEMORY=true
#
# ============================================================================
# VIEWING LOGS
# ============================================================================
#
# Text format:
#   tail -f app.log
#   grep "graphic_id=g1" app.log
#   python scripts/analyze_logs.py app.log --timing
#
# JSON format:
#   tail -f app.log | jq
#   python scripts/analyze_logs.py app.log --json --timing
#
# Performance summary API:
#   GET http://localhost:5001/api/performance-summary
#
# ============================================================================
# OTHER CONFIGURATION
# ============================================================================

# Add other environment variables below as needed

# ============================================================================
# PHOTOSHOP AUTOMATION (PSD Parser Fallback)
# ============================================================================

# Path to Adobe Photoshop application (optional - auto-detected if not set)
# The system will automatically find any installed Photoshop version in /Applications
# Only set this if you want to use a specific Photoshop version
# Example: PHOTOSHOP_APP_PATH=/Applications/Adobe Photoshop 2024/Adobe Photoshop 2024.app
#PHOTOSHOP_APP_PATH=

# Disable Photoshop automation fallback
# Set to 'true' to skip Photoshop automation and go straight to Pillow fallback
# Default: false
# Note: Photoshop automation provides full layer parsing for newer PSD formats
DISABLE_PHOTOSHOP_FALLBACK=false

# ============================================================================
# PSD PARSER FALLBACK CHAIN
# ============================================================================
#
# The PSD parser uses a three-tier fallback approach:
#
# 1. psd-tools (default) - Full layer parsing for standard PSD formats
#    - Fastest method
#    - Works with Photoshop CS through CC 2015 (versions 1-7)
#    - Provides complete layer information
#
# 2. Photoshop automation (fallback) - Full layer parsing via ExtendScript
#    - Used when psd-tools fails (newer formats, version 8+)
#    - Requires Photoshop to be installed
#    - Provides complete layer information
#    - Slightly slower (launches Photoshop if needed)
#
# 3. Pillow (last resort) - Limited parsing
#    - Used when Photoshop is not available
#    - Extracts basic info: dimensions, layer names only
#    - No layer types, text content, or bounding boxes
#
# To disable Photoshop fallback and skip directly to Pillow:
#   DISABLE_PHOTOSHOP_FALLBACK=true

# ============================================================================
# PREVIEW & SIGN-OFF WORKFLOW
# ============================================================================

# Workflow Mode: Validate before generating previews (Mode A) or allow previews first (Mode B)
# Mode A (default): Validate → Preview → Sign-off → Render
# Mode B: Preview → Validate → Sign-off → Render
# Default: true (Mode A)
VALIDATE_BEFORE_PREVIEW=true

# Require sign-off approval before final render
# Set to 'false' to allow final renders without explicit approval
# Default: true
REQUIRE_SIGNOFF_FOR_RENDER=true

# After Effects preview preset for draft previews (low-res, fast)
# Options: draft_720p_4mbps, draft_480p_2mbps, draft_1080p_8mbps
# Default: draft_720p_4mbps
AE_PREVIEW_PRESET=draft_720p_4mbps

# After Effects final render preset for production (high-quality)
# Options: hq_1080p_15mbps, hq_4k_50mbps, hq_1080p_25mbps
# Default: hq_1080p_15mbps
AE_FINAL_PRESET=hq_1080p_15mbps
